[package]
name = "sparse-merkle-tree"
version = "0.6.1"
authors = ["jjy <jjyruby@gmail.com>"]
edition = "2018"
license = "MIT"
repository = "https://github.com/nervosnetwork/sparse-merkle-tree"
description = "Sparse merkle tree implement in rust"
include = [
  "/src",
  "/benches",
  "/build.rs",
  "/c/deps/ckb-c-stdlib",
  "/c/ckb_smt.h",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["std"]
std = [
  "serde/std",
  "codec/std",
  "serde_with/std",
  "scale-info/std",
  "utoipa",
]
# SMT implemented in C
smtc = []
# A storage optimized SMT implemented in trie (https://ouvrard-pierre-alain.medium.com/sparse-merkle-tree-86e6e2fc26da)
trie = []

[dependencies]
cfg-if = {version = "1"}
serde = { version = "1.0.105",  features = ["derive"], default-features = false }
codec = { package = "parity-scale-codec", version = "3.6.9", features = ["derive"], default-features = false }
serde_with = { version = "3.3.0", features = ["hex", "alloc", "macros"], default-features = false}
scale-info = { version = "2.10.0", default-features = false, features = [
	"derive",
] }

utoipa = { version = "5.2.0", features = ["actix_extras"], optional = true}
[dev-dependencies]
proptest = "0.9"
criterion = "0.2"
rand = "0.8"
hex = "0.4.3"
serde_json = "1.0"
anyhow = "1.0.65"



[[bench]]
name = "smt_benchmark"
harness = false

[[bench]]
name = "store_counter_benchmark"
harness = false

[build-dependencies]
cc = "1.0"
